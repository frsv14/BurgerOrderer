Vi alla gjorde varsit konto på GitHub, som vi valde att använda för att det verkar vara
det mest populära.
I github skapade vi ett repository med "burgerorderer" som vi alla lades till i.
Nu har vi det klart så vi kan ladda upp,ladda ner och redigera varandras kod.

Jag började med att sätta upp Flask i Python. Flask är ett ramverk i Python som gör det enkelt att bygga webbsidor. 
Jag valde python för att det är vad vi håller på att arbeta med i våran andra kurs
så det kändes som det lättaste just nu, även om javascript med node förmodligen fungerat fint oxå. Jag googlade vad som skulle 
fungera bäst med denna uppgiften, och fick då fram att Flask verkade vara det bästa, även det som blev rekommenderat till python av kursansvarig. 

Vi gjorde 2 python filer som heter "app.py" "database.py" och sen templates där de olika html hemsidorna ska ligga.

I app.py så ska själva grunden ligga där requests från "frontend" kommer och hämtar information från databasen.
Här ligger oxå "routing" som avgör vilken funktion som ska köras beroende på vilken sida användaren är inne på.

I database.py hanteras databasen, här är funktioner för att skapa, läsa, uppdatera  och ta bort funktioner i databasen.


För att lagra burgare och beställningar valde jag SQLite. Det är en liten o simpel databas som jag tyckte verkade passa bra till detta projektet. 
Egentligen behövs ingen container för den då den ligger direkt på
hårddisken, men man kan koppla den till tex docker om man vill.

För att bygga upp databasen så behövde jag skapa tabeller:
Jag började med att göra 3 tabeller, Burgare, Ordrar och Anpassningar.
Burgare sparar namn och pris på varje burgare.
Ordrar lagrar information om beställningar som görs, tex vilken burgare och hur många.
Anpassningar tar in vad som ska modifieras på burgarna. Tex "Bacon" eller "ingen tomat"

Jag lade till några burgare i tabellen "Burgare". Ostburgare, Baconburgare och vegetarisk.

Kändes enklast att börja på detta sättet så vi kan börja bygga på resten av programmet och 
koppla det direkt till databasen.

