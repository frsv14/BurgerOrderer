Configuration Management.

1. Names of everyone in the team.

Albin
Freddy
Herman
Robin

2. Link to the project's page on the git server.

https://github.com/frsv14/BurgerOrderer

3. A brief summary of what configuration management is and why it is used.

It is used to ensure that all developers work with the same version of the software, track what changes, and quickly restore previous versions if something goes wrong. It also helps to automate and standardize system settings, making it easier to manage large projects and avoid mistakes.

4. A brief summary of the most common workflow with git, including the git commands used.

The most common workflow with Git looks something like this:

Clone a repo: Copy an existing repository from GitHub to your local computer.
git clone <repo-url>

Create a new branch: Work in a separate branch to keep changes isolated from the main code.
git checkout -b <new-branch>

Make changes: Modify files in the project.

Stage changes: Prepare changed files to be saved in Git.
git add <filename> or git add . for all changes.

Save changes (commit): Create a point in history with a message describing what you changed.
git commit -m "Description of changes"

Push to remote repo: Send your changes to the shared repo (e.g., on GitHub).
git push origin <new-branch>

Create a Pull Request: When the changes are ready, open a Pull Request on GitHub to get the code reviewed and merged with the main branch.
Fetch new changes: Update your local copy with any changes from the remote repo.
git pull

5. Your experiences with working with configuration management.

• What went well?
Sharing code with each other

• What went less well?
Before figuring out how to remove changes that shouldn't be committed, some unnecessary files accidentally got included in the repo.

• How did you solve the difficulties? Could you have done it differently?
We looked up gitignore and solved it so that we only included files that should be committed.

• What did you fail to solve? Why not?
We haven't had any problems that couldn't be solved!
